#include <stdio.h>
 
#define MAXN 100
#define DELTA 'a'-'A'  /* 大写小写字母之间的距离是一定的，因此这里定了一个常量 */
 
int mygets(char s[])
{
    /**自定义函数 - 用于输入字符串，对于该题的特殊处理
     * 理用这个函数可以获得带有空格的长串字符串
     */
    int i = 0;
    char c;  /* 临时字符，单个字符一个字符输入 */
 
    while((c = getchar()) && c != '\n' && c != EOF)  /* 判断赋值语句是否成功，且c不是回车符，而且c不是EOF的时候就可以继续输入 */
        s[i++] = c;
    s[i] = '\0';  /* 这里是s[i]的原因是，跳出循环后，i刚好是最后一个字符的后一个，使用'\0' 表示字符串结束了 */
 
    return i > 0 || c != EOF; /* 这里的返回值是0或者1，i>0表示字符串不为空，c!=EOF表示输入的字符不为空，两个只要一个正确，那么说明字符串均不为空 */
}
 
int main(void)
{
    char s[MAXN+1];
    int i;
 
    while(mygets(s)) {
        if('a' <= s[0] && s[0] <= 'z') /* 先从简单的开始讨论--字符串头 */
            s[0] -= DELTA;  /* 小写转变为大写的操作 */
 
        for(i=1; s[i]!='\0'; i++) { /* 不断推进字符串的位置 *//* 重写时：这里出现过错误，i=0,由于上面已经讨论了，而且如果这里为0的话，在线面判断的时候会出现不可预知的错误 */
            if(s[i-1] == ' ' && 'a' <= s[i] && s[i] <= 'z') /* 判断该字母所在位置是否是单词首字母，并且确定这是一个小写字母才行！ */
                s[i] -= DELTA;
        }
 
        printf("%s\n", s);
    }
 
    return 0;
}